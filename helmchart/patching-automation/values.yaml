# Default values for patching-automation.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

initContainerImage: alpine:3.17.3

replicaCount: 1

image:
  repository: ghcr.io/tjm/puppet-patching-automation
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

extraEnvironmentVariables:

patchingAutomation:
  ## Add custom volumes
  customVolumes: |
    #  - name: certs
    #    configMap:
    #      name: certs

  ## Add custom volumesMounts
  customVolumeMounts: |
    #  - name: certs
    #    mountPath: "/certs"

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Database configurations
## Use the wait-for-db init container. Set to false to skip
waitForDatabase: true

postgresql:
  # Additional values can be found here: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
  enabled: true
  image:
    # registry: docker.io
    tag: 12.12.0
  auth:
    username: padb
    password: ""
    database: padb
  primary:
    persistence:
      enabled: true
      size: 5Gi
    nodeSelector: {}
    affinity: {}
    tolerations: []
  read:
    nodeSelector: {}
    affinity: {}
    tolerations: []
  resources: {}
  #  requests:
  #    memory: "512Mi"
  #    cpu: "100m"
  #  limits:
  #    memory: "1Gi"
  #    cpu: "500m"

## If NOT using the PostgreSQL in this chart (postgresql.enabled=false),
## you MUST specify custom database details here or PatchingAutomation app will NOT start
database:
  type: postgresql
  host:
  port:
  ## If you would like this chart to create the secret containing the db
  ## password, use these values
  user:
  password:
  ## If you have existing Kubernetes secrets containing db credentials, use
  ## these values
  secrets: {}
  #  user:
  #    name: "padb"
  #    key: "db-user"
  #  password:
  #    name: "padb"
  #    key: "db-password"
  #  url:
  #    name: "padb"
  #    key: "db-url"

# Init containers
initContainers:
  resources: {}
#    requests:
#      memory: "64Mi"
#      cpu: "10m"
#    limits:
#      memory: "128Mi"
#      cpu: "250m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
